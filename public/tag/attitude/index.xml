<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Attitude | </title>
    <link>https://armanasq.github.io/tag/attitude/</link>
      <atom:link href="https://armanasq.github.io/tag/attitude/index.xml" rel="self" type="application/rss+xml" />
    <description>Attitude</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 01 Apr 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://armanasq.github.io/media/icon_hu3a1b1aacf1bb12033635935a8f8a9863_117561_512x512_fill_lanczos_center_3.png</url>
      <title>Attitude</title>
      <link>https://armanasq.github.io/tag/attitude/</link>
    </image>
    
    <item>
      <title>Attitude Representation - Other</title>
      <link>https://armanasq.github.io/attitude-representations-others/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://armanasq.github.io/attitude-representations-others/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/quaternion/&#34;&gt;Quaternion&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#gibbs-vector--rodrigues-parameter-representation&#34;&gt;Gibbs Vector / Rodrigues Parameter Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#modified-rodrigues-parameters&#34;&gt;Modified Rodrigues Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cayley-klein&#34;&gt;Cayley-Klein&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gibbs-vector--rodrigues-parameter-representation&#34;&gt;Gibbs Vector / Rodrigues Parameter Representation&lt;/h2&gt;
&lt;p&gt;The Gibbs vector also known as Rodrigues Parameter is a set of three parameters denoted by $ g $ (or $ P $) and can be directly derived from axis-angle $ (e, \theta) $ or quaternion representation as follows:&lt;/p&gt;
&lt;div&gt;
$$ \mathbf{g} = \frac{\mathbf{q}_{v}}{q_0} $$
&lt;/div&gt;
&lt;div&gt;
$$ \mathbf{g} = \frac{e \sin\frac{\theta}{2}}{\cos\frac{\theta}{2}} $$
&lt;/div&gt;
&lt;p&gt;where $ \mathbf{q}_{v} $ is the vector part of the quaternion, $ e $ is the unit vector of the axis of rotation, and $ \theta $ is the angle of rotation.&lt;/p&gt;
&lt;p&gt;The Gibbs vector is a unit vector that represents the axis of rotation and the magnitude of the vector represents the angle of rotation. The Gibbs vector can be used to represent the rotation matrix $C_{\psi\theta\phi}$ as:&lt;/p&gt;
&lt;div&gt;
$$ C_{\psi\theta\phi} = \begin{bmatrix} 1 - 2(g_2^2 + g_3^2) &amp; 2(g_1g_2 - g_3) &amp; 2(g_1g_3 + g_2) \\ 2(g_1g_2 + g_3) &amp; 1 - 2(g_1^2 + g_3^2) &amp; 2(g_2g_3 - g_1) \\ 2(g_1g_3 - g_2) &amp; 2(g_2g_3 + g_1) &amp; 1 - 2(g_1^2 + g_2^2) \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;where $ g_1 $, $ g_2 $, and $ g_3 $ are the components of the Gibbs vector.&lt;/p&gt;
&lt;p&gt;The Gibbs vector components expressed in DCM can be calculated using the following:&lt;/p&gt;
&lt;div&gt;
$$ g_1 = \frac{R_{23}-R_{32}}{1+R_{11}+R_{22}+R_{33}} $$
&lt;/div&gt;
&lt;div&gt;
$$ g_2 = \frac{R_{31}-R_{13}}{1+R_{11}+R_{22}+R_{33}} $$
&lt;/div&gt;&lt;div&gt;
$$ g_3 = \frac{R_{12}-R_{21}}{1+R_{11}+R_{22}+R_{33}} $$
&lt;/div&gt;
where $ R_{ij} $ is the element of the rotation matrix.
&lt;p&gt;The Rodrigues Parameter preferred as an attitude error representation because it is a unit vector and it is easy to calculate the attitude error between two quaternions. The attitude error between two quaternions can be calculated using the following:&lt;/p&gt;
&lt;div&gt;
$$ \mathbf{g}_{error} = \frac{2\mathbf{q}_{v}}{q_0} $$
&lt;/div&gt;
The Gibbs vector components expereince a singularity at $ \theta = \pi $, which is the same as the Euler angles. The Gibbs vector is not a good representation for small rotations.
&lt;h2 id=&#34;modified-rodrigues-parameters&#34;&gt;Modified Rodrigues Parameters&lt;/h2&gt;
&lt;p&gt;In attitude filter design Modified Rodrigues Parameters (MRP) is preferred for attitude error representation. The MRP is a set of three parameters denoted by $ \mathbf{m} $ and can be directly derived from axis-angle $ (e, \theta) $ or quaternion representation as follows:&lt;/p&gt;
&lt;div&gt;
$$ \mathbf{m} = \frac{\mathbf{q}_{v}}{1+q_0} $$
&lt;/div&gt;&lt;div&gt;
$$ \mathbf{m} = \frac{e \sin\frac{\theta}{2}}{1+\cos\frac{\theta}{2}} $$
&lt;/div&gt;
where $ \mathbf{q}_{v} $ is the vector part of the quaternion, $ e $ is the unit vector of the axis of rotation, and $ \theta $ is the angle of rotation.
&lt;p&gt;Due to above equation the maximum equivalent rotation to describe is $ \pm 360^{\circ}$ (the singularity occurs in $ \pm 360^{\circ}$).&lt;/p&gt;
&lt;h2 id=&#34;cayley-klein&#34;&gt;Cayley-Klein&lt;/h2&gt;
&lt;p&gt;The Cayley-Klein parameters are consisting of 4 parameters which are closely related to the quaternions and denoted by matrix $ \mathbf{K}_{2\times 2} $.&lt;/p&gt;
&lt;div&gt;
$$ K = \begin{bmatrix} \alpha &amp; \beta \\ \gamma &amp; \sigma \end{bmatrix} $$
&lt;/div&gt;
and satisfy the constraints
&lt;div&gt;
$$ \alpha \bar{\alpha} + \gamma \bar{\gamma} = 1 \\ \alpha \bar{\alpha} + \beta \bar{\beta} = 1 \\ \alpha \bar{\beta} + \gamma \bar{\sigma} = 0 \\ \alpha \sigma + \beta \gamma = 1 \\ \beta = -\bar{\gamma} \\ \sigma = \bar{\alpha} $$
&lt;/div&gt;
where $ \alpha $, $ \beta $, $ \gamma $, and $ \sigma $ are the Cayley-Klein parameters and $ \bar{\alpha} $, $ \bar{\beta} $, $ \bar{\gamma} $, and $ \bar{\sigma} $ are the conjugate of the Cayley-Klein parameters.
&lt;p&gt;The corresponding quaternions are defined_as:&lt;/p&gt;
&lt;div&gt;
$$ \mathbf{q}_K = \begin{bmatrix} \frac{ \alpha + \sigma }{2} \\ \frac{ -i(\beta + \gamma) }{2} \\ \frac{ \beta - \gamma }{2} \\ \frac{ -i(\alpha - \sigma) }{2} \end{bmatrix} $$
&lt;/div&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;p&gt;[1] Markley, F. Landis, and John L. Crassidis. Fundamentals of spacecraft attitude determination and control. Vol. 1286. New York, NY, USA:: Springer New York, 2014. &lt;br&gt;
[2] Junkins, John L., and Hanspeter Schaub. Analytical mechanics of space systems. American Institute of Aeronautics and Astronautics, 2009. &lt;br&gt;
[3] De Ruiter, Anton H., Christopher Damaren, and James R. Forbes. Spacecraft dynamics and control: an introduction. John Wiley &amp;amp; Sons, 2012. &lt;br&gt;
[4] Wertz, James R., ed. Spacecraft attitude determination and control. Vol. 73. Springer Science &amp;amp; Business Media, 2012. &lt;br&gt;
[5] Vepa, Ranjan. Dynamics and Control of Autonomous Space Vehicles and Robotics. Cambridge University Press, 2019. &lt;br&gt;
[6] Shuster, Malcolm D. &amp;ldquo;A survey of attitude representations.&amp;rdquo; Navigation 8.9 (1993): 439-517. &lt;br&gt;
[7] Markley, F. Landis. &amp;ldquo;Attitude error representations for Kalman filtering.&amp;rdquo; Journal of guidance, control, and dynamics 26.2 (2003): 311-317. &lt;br&gt;
[8] Markley, F. Landis, and Frank H. Bauer. Attitude representations for Kalman filtering. No. AAS-01-309. 2001. &lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Attitude Representation - Quaternions</title>
      <link>https://armanasq.github.io/quaternion/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://armanasq.github.io/quaternion/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/euler-angles/&#34;&gt;Euler Angles&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#euler-parameters-quaternions-representation&#34;&gt;Euler Parameters (Quaternions) representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;euler-parameters-quaternions-representation&#34;&gt;Euler Parameters (Quaternions) representation&lt;/h2&gt;
&lt;p&gt;A four-element vector with three imaginary and one real component is known as Quaternion. These hypercomplex numbers are optimum for numerical stability and memory load. The Euler parameters are a four-dimensional vector that can be used to represent the orientation of a rigid body. The Euler parameters are defined as:&lt;/p&gt;
&lt;div&gt;
$$ q = \begin{bmatrix} q_0 \\ q_1 \\ q_2 \\ q_3 \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;where $q_0$ is the scalar part and $q_1$, $q_2$, and $q_3$ are the vector part. It could be written as:&lt;/p&gt;
&lt;div&gt;
$$ q = q_0 + q_1i + q_2j + q_3k $$
&lt;/div&gt;
&lt;p&gt;where $i$, $j$, and $k$ are the imaginary unit vectors and&lt;/p&gt;
&lt;div&gt;
$$ i^2 = j^2 = k^2 = ijk = -1 $$
&lt;/div&gt;
&lt;div&gt;
$$ \mathbb{q} = (q_0 , \mathbf{q}_v) $$
&lt;/div&gt;
&lt;p&gt;where $ \mathbf{q}_v = (q_1 , q_2 , q_3) $ is the vector part of the quaternion. The quaternion is a unit quaternion if $ \mathbb{q} \cdot \mathbb{q}^* = 1 $, where $ \mathbb{q}^* $ is the conjugate of $ \mathbb{q} $.&lt;/p&gt;
&lt;p&gt;It is noticeable that some authors may use left-handed quaternions witch is defined by:&lt;/p&gt;
&lt;div&gt;
$$ \mathbf{q} = iq_1 + jq_2 + kq_3 + q_0 \\ ijk = 1 $$
&lt;/div&gt;
This representation has no fundamental implications but will change the details of formulation.
&lt;p&gt;Quaternions do not have any singularity such as Euler angles. However, due to the lack of independence of components, it may present difficulties in the application of the filter equations. The quaternion is not unique, and the mirror quaternion will result in the same rotation. This is a purely mathematical representation and based upon single rotation theta around vector e with angle. It could not be used for visualization.&lt;/p&gt;
&lt;p&gt;Quaternion also, can be used to describe the axis-angle representation by:&lt;/p&gt;
&lt;div&gt;
$$ \mathbf{q} = \begin{bmatrix}q_w \\ q_x \\ q_y \\ q_z\end{bmatrix} = \begin{bmatrix} \cos\frac{\theta}{2} \\ v_x \sin\frac{\theta}{2} \\ v_y \sin\frac{\theta}{2} \\ v_z \sin\frac{\theta}{2} \end{bmatrix} = \begin{bmatrix} \cos\frac{\theta}{2} \\ \mathbf{v} \sin\frac {\theta}{2} \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;Also, the quaternion can be expressed in $4 \times 4$ skew-symmetric matrix form&lt;/p&gt;
&lt;div&gt;
$$ Q = \begin{bmatrix} q_0 &amp; -q_1 &amp; -q_2 &amp; -q_3 \\ q_1 &amp; q_0 &amp; -q_3 &amp; q_2 \\ q_2 &amp; q_3 &amp; q_0 &amp; -q_1 \\ q_3 &amp; -q_2 &amp; q_1 &amp; q_0 \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;The quaternion represents the attitude of frame $A$ relative to frame $B$ defined by the following equation:&lt;/p&gt;
&lt;div&gt;
$$ {}^{A}_{B}\mathbf{q}={}^{B}_{A}\mathbf{q}^* $$
&lt;/div&gt;
&lt;p&gt;where $ {}^{A}_{B}\mathbf{q} $  is the quaternion that represents the attitude of frame $ A $ relative to frame $ B $.&lt;/p&gt;
&lt;p&gt;$ {}^{B}_{A}\mathbf{q}^* $ is the conjugate of the quaternion that represents the attitude of frame $ A $ relative to frame $ B $. The $ \mathbf{q}^* $ (conjugate of the quaternion $ \mathbf{q} $) gives the inverse rotation.&lt;/p&gt;
&lt;p&gt;The relationship between quaternions and Euler angles based on $zyx$ sequence can be calculated using the following:&lt;/p&gt;
&lt;div&gt;
$$ \mathbf{q} = \begin{bmatrix} \cos\frac{\theta_x}{2} \cos\frac{\theta_y}{2} \cos\frac{\theta_z}{2} + \sin\frac{\theta_x}{2} \sin\frac{\theta_y}{2} \sin\frac{\theta_z}{2} \\ \sin\frac{\theta_x}{2} \cos\frac{\theta_y}{2} \cos\frac{\theta_z}{2} - \cos\frac{\theta_x}{2} \sin\frac{\theta_y}{2} \sin\frac{\theta_z}{2} \\ \cos\frac{\theta_x}{2} \sin\frac{\theta_y}{2} \cos\frac{\theta_z}{2} + \sin\frac{\theta_x}{2} \cos\frac{\theta_y}{2} \sin\frac{\theta_z}{2} \\ \cos\frac{\theta_x}{2} \cos\frac{\theta_y}{2} \sin\frac{\theta_z}{2} - \sin\frac{\theta_x}{2} \sin\frac{\theta_y}{2} \cos\frac{\theta_z}{2} \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;where $ \theta_x $, $ \theta_y $, and $ \theta_z $ are the Euler angles.&lt;/p&gt;
&lt;p&gt;Also, the Euler angles can be calculated using the following:&lt;/p&gt;
&lt;div&gt;
$$ \phi = \arctan\left(\frac{2(q_0q_1 + q_2q_3)}{1 - 2(q_1^2 + q_2^2)}\right) $$
&lt;/div&gt;
&lt;div&gt;
$$ \theta = \arcsin\left(2(q_0q_2 - q_3q_1)\right) $$
&lt;/div&gt;
&lt;div&gt;
$$ \psi = \arctan\left(\frac{2(q_0q_3 + q_1q_2)}{1 - 2(q_2^2 + q_3^2)}\right) $$
&lt;/div&gt;
Since there are 12 different Euler angles sets, there are 12 quaternion to Euler angles conversion equation.
&lt;p&gt;The quaternion can be used to represent the rotation matrix $C_{\psi\theta\phi}$ as:&lt;/p&gt;
&lt;div&gt;
$$ C_{\psi\theta\phi} = \begin{bmatrix} q_0^2 + q_1^2 - q_2^2 - q_3^2 &amp; 2(q_1q_2 - q_0q_3) &amp; 2(q_1q_3 + q_0q_2) \\ 2(q_1q_2 + q_0q_3) &amp; q_0^2 - q_1^2 + q_2^2 - q_3^2 &amp; 2(q_2q_3 - q_0q_1) \\ 2(q_1q_3 - q_0q_2) &amp; 2(q_2q_3 + q_0q_1) &amp; q_0^2 - q_1^2 - q_2^2 + q_3^2 \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/attitude-representations-others/&#34;&gt;Other Attitude Representations&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;p&gt;[1] Markley, F. Landis, and John L. Crassidis. Fundamentals of spacecraft attitude determination and control. Vol. 1286. New York, NY, USA:: Springer New York, 2014. &lt;br&gt;
[2] Junkins, John L., and Hanspeter Schaub. Analytical mechanics of space systems. American Institute of Aeronautics and Astronautics, 2009. &lt;br&gt;
[3] De Ruiter, Anton H., Christopher Damaren, and James R. Forbes. Spacecraft dynamics and control: an introduction. John Wiley &amp;amp; Sons, 2012. &lt;br&gt;
[4] Wertz, James R., ed. Spacecraft attitude determination and control. Vol. 73. Springer Science &amp;amp; Business Media, 2012. &lt;br&gt;
[5] Vepa, Ranjan. Dynamics and Control of Autonomous Space Vehicles and Robotics. Cambridge University Press, 2019. &lt;br&gt;
[6] Shuster, Malcolm D. &amp;ldquo;A survey of attitude representations.&amp;rdquo; Navigation 8.9 (1993): 439-517. &lt;br&gt;
[7] Markley, F. Landis. &amp;ldquo;Attitude error representations for Kalman filtering.&amp;rdquo; Journal of guidance, control, and dynamics 26.2 (2003): 311-317. &lt;br&gt;
[8] Markley, F. Landis, and Frank H. Bauer. Attitude representations for Kalman filtering. No. AAS-01-309. 2001. &lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Attitude Representation - Euler Angles</title>
      <link>https://armanasq.github.io/euler-angles/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://armanasq.github.io/euler-angles/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/attitude-representation/&#34;&gt;Attitude Representation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#euler-angles-representation&#34;&gt;Euler Angles Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;euler-angles-representation&#34;&gt;Euler Angles Representation&lt;/h2&gt;
&lt;p&gt;A vector of three angles that represent the attitude of the coordinate frame $ i $ with respect to the coordinate frame $ j $ is called Euler angles. Euler angles are the most commonly used attitude representation because it&amp;rsquo;s easy to use and understand. One of Euler angles&amp;rsquo; obvious advantages is their intuitive representation.&lt;/p&gt;
&lt;div&gt;
$$ \text{Euler angles} = \begin{bmatrix} \phi \\ \theta \\ \psi \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;where $\phi$, $\theta$, and $\psi$ are the rotation angles about the $x$, $y$, and $z$ axes, respectively. The Euler angles are defined as follows:&lt;/p&gt;
&lt;div&gt;
$$  \phi = \arctan\left(\frac{R_{32}}{R_{33}}\right) \\ \theta = \arcsin\left(-R_{31}\right) \\ \psi = \arctan\left(\frac{R_{21}}{R_{11}}\right)  $$
&lt;/div&gt;
where $R_{ij}$ is the element of the rotation matrix $R$.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Roll&lt;/strong&gt;: Rotation around the x-axis with angle $ \phi $&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
$$ C_{\phi} = \begin{bmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; cos(\phi) &amp; sin(\phi) \\ 0 &amp; -sin(\phi) &amp; cos(\phi) \end{bmatrix} $$
&lt;/div&gt;
* **Pitch**: Rotation around the y-axis with angle $ \theta $
&lt;div&gt;
$$ C_{\theta} = \begin{bmatrix} cos(\theta) &amp; 0 &amp; -sin(\theta) \\ 0 &amp; 1 &amp; 0 \\ sin(\theta) &amp; 0 &amp; cos(\theta) \end{bmatrix} $$
&lt;/div&gt;
* **Yaw**: Rotation around the z-axis with angle $ \psi $
&lt;div&gt;
$$ C_{\psi} = \begin{bmatrix} cos(\psi) &amp; sin(\psi) &amp; 0 \\ -sin(\psi) &amp; cos(\psi) &amp; 0 \\ 0 &amp; 0 &amp; 1 \end{bmatrix} $$
&lt;/div&gt;
Euler angles represent three consecutive rotations, and they could be defined in twelve different orders. The most common order is the yaw-pitch-roll (YPR) order, which is also called the z-y-x order. The rotation matrix can be written as:
&lt;div&gt;
$$ C_{\psi\theta\phi} = C_{\psi}C_{\theta}C_{\phi} $$
&lt;/div&gt;
&lt;div&gt;
$$ C_{\psi\theta\phi} = \begin{bmatrix} cos(psi)cos(\theta) &amp; cos(psi)sin(\theta)sin(\phi)-sin(psi)cos(\phi) &amp; cos(psi)sin(\theta)cos(\phi)+sin(psi)sin(\phi) \\ sin(psi)cos(\theta) &amp; sin(psi)sin(\theta)sin(\phi)+cos(psi)cos(\phi) &amp; sin(psi)sin(\theta)cos(\phi)-cos(psi)sin(\phi) \\ -sin(\theta) &amp; cos(\theta)sin(\phi) &amp; cos(\theta)cos(\phi) \end{bmatrix} $$
&lt;/div&gt;
The Euler angles of the rotation matrix $C_{\phi\theta\psi}$ can be written as:
&lt;div&gt;
$$ \phi = \arctan\left(\frac{C_{32}}{C_{33}}\right) $$
&lt;/div&gt;&lt;div&gt;
$$ \theta = \arctan\left(\frac{C_{32}}{\sqrt{1-C_{32}^2}}\right) $$
&lt;/div&gt;&lt;div&gt;
$$ \psi = \arctan\left(\frac{C_{31}}{C_{33}}\right) $$
&lt;div&gt;
The Euler angles are not unique. For example, the Euler angles $ (0,0,0) $ and $ (2\pi,2\pi,2\pi) $ represent the same rotation. The Euler angles are also not invariant to the order of the rotations. For example, the Euler angles $ R_{x,y,z}(0,0,0) $ and $ R_{z,y,x}(0,0,0) $ represent the same rotation, but the rotation matrix is different.
&lt;p&gt;Three rotation angles $\phi$, $\theta$, and $\psi$ are about the sequential displaced body-fixed axes, and twelve different sequences are possible that can be used for the same rotation. The location of each sequential rotation depends on the preceding rotation, and there are divided into two main categories:&lt;/p&gt;
&lt;ol&gt; 
  &lt;li&gt; &lt;b&gt;Symmetric sequences&lt;/b&gt;: The first and third rotations are performed around the same axis, second rotation is performed around one of the two others:&lt;/li&gt;
$$ R_{i,j,i}(\alpha, \beta, \gamma) = R_i(\alpha)R_j(\beta)R_i(\gamma) $$
&lt;center&gt; Symmetric sequence $ (i,j,i)$, $ i \ne j$, $ \alpha, \beta, \gamma \in \mathbb{R}$ &lt;/center&gt;
  &lt;li&gt; &lt;b&gt;Asymmetric sequences&lt;/b&gt;: All rotations performed around three different axes: &lt;/li&gt;
$$ R_{i,j,k}(\alpha, \beta, \gamma) = R_i(\alpha)R_j(\beta)R_k(\gamma) $$
&lt;center&gt; Asymmetric sequence $ (i,j,k)$, $ i \ne j \ne k \ne i$, $ \alpha, \beta, \gamma \in \mathbb{R}$ &lt;/center&gt;
&lt;/ol&gt;
&lt;p&gt;These angles are not unique, and the mirror angles will result in the same rotations.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt; For &lt;b&gt;&lt;i&gt;Symmetric sequences&lt;/i&gt;&lt;/b&gt;: $ R(\alpha, \beta, \gamma) = R(\alpha + \pi, -\beta,\gamma - \pi) $ &lt;/li&gt;
  &lt;li&gt; For &lt;b&gt;&lt;i&gt;Asymmetric sequences&lt;/i&gt;&lt;/b&gt;: $ R(\alpha, \beta, \gamma) = R(\alpha + \pi, \pi -\beta,\gamma - \pi) $ &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The main disadvantages of Euler angles are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Singularity
&lt;/li&gt;
&lt;li&gt;Non-uniqueness &lt;/li&gt;
&lt;li&gt;Non-invariance &lt;/li&gt;
&lt;li&gt; Less accuracy for integration of attitude incremental changes over time&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At $ \theta = \left(\pm\frac{\pi}{2}\right) $ the singularities will occur and usually known as mathematical gimble lock where to axes are parallel to each other.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/quaternion/&#34;&gt;Quaternion&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;p&gt;[1] Markley, F. Landis, and John L. Crassidis. Fundamentals of spacecraft attitude determination and control. Vol. 1286. New York, NY, USA:: Springer New York, 2014. &lt;br&gt;
[2] Junkins, John L., and Hanspeter Schaub. Analytical mechanics of space systems. American Institute of Aeronautics and Astronautics, 2009. &lt;br&gt;
[3] De Ruiter, Anton H., Christopher Damaren, and James R. Forbes. Spacecraft dynamics and control: an introduction. John Wiley &amp;amp; Sons, 2012. &lt;br&gt;
[4] Wertz, James R., ed. Spacecraft attitude determination and control. Vol. 73. Springer Science &amp;amp; Business Media, 2012. &lt;br&gt;
[5] Vepa, Ranjan. Dynamics and Control of Autonomous Space Vehicles and Robotics. Cambridge University Press, 2019. &lt;br&gt;
[6] Shuster, Malcolm D. &amp;ldquo;A survey of attitude representations.&amp;rdquo; Navigation 8.9 (1993): 439-517. &lt;br&gt;
[7] Markley, F. Landis. &amp;ldquo;Attitude error representations for Kalman filtering.&amp;rdquo; Journal of guidance, control, and dynamics 26.2 (2003): 311-317. &lt;br&gt;
[8] Markley, F. Landis, and Frank H. Bauer. Attitude representations for Kalman filtering. No. AAS-01-309. 2001. &lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Attitude Representation</title>
      <link>https://armanasq.github.io/attitude-representation/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://armanasq.github.io/attitude-representation/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#direction-cosine-matrix-dcm&#34;&gt;Direction Cosine Matrix (DCM)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#axis-angle-representation&#34;&gt;Axis-Angle Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/attitude/&#34;&gt;Attitude&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Attitude representation is a set of coordinates that fully describe a rigid body’s orientation with respect to a reference frame. There are an infinite number of attitude representations, each of which has strengths and weaknesses. Choosing the proper attitude representation depends on the estimation algorithm, type of the moving object (e.g. satellite, spacecraft), type of mission, and reference frame selection. Attitude representation impacts mathematical complexity, geometrical singularities, and operational range, so it&amp;rsquo;s crucial to choose the proper representation for the objectives. At least, three coordinates are needed to describe the attitude in a 3D space that has at least one singularity. Singularities can be avoided by using four or more coordinates, but even the use of four coordinates does not guarantee their avoidance.&lt;/p&gt;
&lt;p&gt;There are various attitude representations that are common in the industry, such as Direction Cosine Matrix, Euler angles, Euler Parameters (Quaternions), Gibb&amp;rsquo;s vectors, and so on. We will describe a few of them below.&lt;/p&gt;
&lt;p&gt;To maintain consistency in mathematical notations, two reference frames (as a reference frame) and (as a body frame) have been defined as follows:&lt;/p&gt;
&lt;div&gt;
$$ 
N \equiv  \begin{bmatrix} n_1 \\ n_2 \\ n_3 \end{bmatrix},   B \equiv  \begin{bmatrix} b_1 \\ b_2 \\ b_3 \end{bmatrix}  
$$
&lt;/div&gt;
&lt;h2 id=&#34;direction-cosine-matrix-dcm&#34;&gt;Direction Cosine Matrix (DCM)&lt;/h2&gt;
&lt;p&gt;In mathematics, a direction cosine matrix (DCM) is a matrix that transforms coordinate reference frames. Attitude Matrix, also known as DCM, is the most fundamental and redundant method of describing relative attitudes.&lt;/p&gt;
&lt;div&gt;
$$
\mathbf{R} =
\begin{bmatrix}
r_{11} &amp; r_{12} &amp; r_{13} \\
r_{21} &amp; r_{22} &amp; r_{23} \\
r_{31} &amp; r_{32} &amp; r_{33}
\end{bmatrix} \in \mathbb{R}^{3\times 3}
$$
&lt;/div&gt;
&lt;p&gt;There are nine parameters, of which six are redundant due to orthogonality. The DCM elements can be described as the dot product of coordinate system axes, which express the base vector as follows:&lt;/p&gt;
&lt;div&gt;
$$ DCM = \begin{bmatrix} b_1 \cdot n_1 &amp; b_1 \cdot n_2 &amp; b_1 \cdot n_3 \\ b_2 \cdot n_1 &amp; b_2 \cdot n_2 &amp; b_2 \cdot n_3 \\ b_3 \cdot n_1 &amp; b_3 \cdot n_2 &amp; b_3 \cdot n_3\end{bmatrix} $$
&lt;/div&gt;
In the other hand, the cosine of three angles between each body vector $ b_i, (i=1,2,3) $ and three axes $ n_i, (i=1,2,3) $ are called the direction cosine matrix.
&lt;div&gt;
$$ b_i = cos(\alpha_{i1}\mathbf{n}_1) + cos(\alpha_{i2}\mathbf{n}_2) + cos(\alpha_{i3}\mathbf{n}_3) \\ i=1,2,3 $$
&lt;/div&gt;
&lt;p&gt;So, the direction cosine matrix can be rewritten by:&lt;/p&gt;
&lt;div&gt;
$$ DCM = \begin{bmatrix} cos(\alpha_{11}) &amp; cos(\alpha_{12}) &amp; cos(\alpha_{13}) \\ cos(\alpha_{21}) &amp; cos(\alpha_{22}) &amp; cos(\alpha_{23}) \\ cos(\alpha_{31}) &amp; cos(\alpha_{32}) &amp; cos(\alpha_{33})  \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;So,&lt;/p&gt;
&lt;div&gt;
$$ \hat{\mathbf{b}} = \text{DCM} \hat{\mathbf{n}} $$
&lt;/div&gt;
&lt;p&gt;where $\hat{\mathbf{b}}$ and $\hat{\mathbf{n}}$ are the unit vectors of the body and reference frames, respectively.&lt;/p&gt;
&lt;h2 id=&#34;axis-angle-representation&#34;&gt;Axis-Angle Representation&lt;/h2&gt;
&lt;p&gt;Euler’s theorem states that all rotations of a solid object can be expressed as single rotation $ \theta $ about a unit length axis $ e $ in the rotation plane. In other words, each orthogonal matrix $ R $ has a specified unit vector rotation axis donated $ e $, known as Euler axis, and a single rotation angle $ \theta $ is called Euler angle. The axis angle representation can be written as:&lt;/p&gt;
&lt;p&gt;$$ \theta \mathbf{e}= \begin{bmatrix} \theta e_1 \ \theta e_2 \ \theta e_3 \end{bmatrix} $$&lt;/p&gt;
&lt;p&gt;where&lt;/p&gt;
&lt;p&gt;$$ \mathbf{e} = \begin{bmatrix} e_1 \ e_2 \ e_3 \end{bmatrix} $$&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;$$ |\mathbf{e}| = 1 $$&lt;/p&gt;
&lt;p&gt;Since, $(e,\theta)$ and $(-e,-\theta)$ correspond to the same rotation, it’s not a unique representation. The axis-angle representation is not a good choice for attitude estimation because it has a singularity at $\theta = \pi$. The axis-angle representation is also not a good choice for attitude control because it is not a linear representation. The axis-angle representation is a good choice for attitude visualization. The axis-angle representation is also a good choice for attitude initialization.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/euler-angles/&#34;&gt;Euler Angles&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;p&gt;[1] Markley, F. Landis, and John L. Crassidis. Fundamentals of spacecraft attitude determination and control. Vol. 1286. New York, NY, USA:: Springer New York, 2014. &lt;br&gt;
[2] Junkins, John L., and Hanspeter Schaub. Analytical mechanics of space systems. American Institute of Aeronautics and Astronautics, 2009. &lt;br&gt;
[3] De Ruiter, Anton H., Christopher Damaren, and James R. Forbes. Spacecraft dynamics and control: an introduction. John Wiley &amp;amp; Sons, 2012. &lt;br&gt;
[4] Wertz, James R., ed. Spacecraft attitude determination and control. Vol. 73. Springer Science &amp;amp; Business Media, 2012. &lt;br&gt;
[5] Vepa, Ranjan. Dynamics and Control of Autonomous Space Vehicles and Robotics. Cambridge University Press, 2019. &lt;br&gt;
[6] Shuster, Malcolm D. &amp;ldquo;A survey of attitude representations.&amp;rdquo; Navigation 8.9 (1993): 439-517. &lt;br&gt;
[7] Markley, F. Landis. &amp;ldquo;Attitude error representations for Kalman filtering.&amp;rdquo; Journal of guidance, control, and dynamics 26.2 (2003): 311-317. &lt;br&gt;
[8] Markley, F. Landis, and Frank H. Bauer. Attitude representations for Kalman filtering. No. AAS-01-309. 2001. &lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Attitude</title>
      <link>https://armanasq.github.io/attitude/</link>
      <pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://armanasq.github.io/attitude/</guid>
      <description>&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#attitude-and-attitude-terminology&#34;&gt;Attitude and Attitude Terminology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Attitude determination and control play a vital role in Aerospace engineering. Most aerial or space vehicles have subsystem(s) that must be pointed to a specific direction, known as pointing modes, e.g., Sun pointing, Earth pointing. For example, communications satellites, keeping satellites antenna pointed to the Earth continuously, is the key to the successful mission. That will be achieved only if we have proper knowledge of the vehicle’s orientation; in other words, the attitude must be determined. In this post, the fundamental concepts for defining the attitude of an object in the three-dimensional space will be presented. It is necessary to have a clear view of the exact meaning of the attitude or orientation. So, at first, the attitude and attitude terminology will be defined. Then the mathematical relationships between the attitude and the angular velocity will be presented. Finally, the attitude and angular velocity will be used to define the attitude dynamics.&lt;/p&gt;
&lt;h2 id=&#34;attitude-and-attitude-terminology&#34;&gt;Attitude and Attitude Terminology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Attitude&lt;/strong&gt; is the mathematical representation of the orientation in space related to the reference frames. Attitude parameters (attitude coordinates) refer to sets of parameters (coordinates) that fully describe a rigid body&amp;rsquo;s attitude, which is not unique expressions. At least three parameters are required to describe the orientation uniquely. The process of determining these parameters is called attitude determination. Attitude determination methods can be divided in two categories: static and dynamic.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Static Attitude Determination&lt;/strong&gt; is a point-to-point time-independent attitude-determining method with the memoryless approach, also known as attitude determination. It is the observations or measurements processing to obtain the information for describing the object&amp;rsquo;s orientation relative to a reference frame. It could be determined by measuring the directions from the vehicle to the known points, i.e., Attitude Knowledge. Due to accuracy limit, measurement noise, model error, and process error, most deterministic approaches are inefficient for accurate prospects; in this situation, using statistical methods will be a good solution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Attitude Determination&lt;/strong&gt; methods, also known as Attitude estimation, refer to using mathematical methods and techniques (e.g., statistical and probabilistic) to predict and estimate the future attitude based on a dynamic model and prior measurements. These techniques fuse data that retain a series of measurements using algorithms such as filtering, Multi-Sensor-Data-Fusion.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Suppose we consider attitude estimation as mathematical methods and attitude determination as instruments and measurements. In that case, we could find that no such works had been done in attitude estimation until the eighteenth or nineteenth century, as M.D. Shuster mentioned in [&lt;a id =&#34;id1&#34; href=&#34;#1&#34; &gt; 1&lt;/a&gt;, &lt;a id =&#34;id2&#34; href=&#34;#2&#34; &gt;2&lt;/a&gt;] attitude estimation is a young and underdeveloped field such that Sputnik 1 (the first artificial satellite) and Echo 1 (the first passive communications satellite experiment) did not have attitude determination and control system (ADCS). Also, the next generation of spacecraft has an attitude control system without any attitude estimation. Those spacecraft used passive attitude control methods such as gravity gradient attitude stabilization.&lt;/p&gt;
&lt;p&gt;At first, two frames must be defined to formulate the attitude, the body frame $B$ and the Observer frame $O$. Then we can define the attitude as the orientation of the $B$ frame with respect to the $O$ frame. Usually, the rigid body orientation is given with respect to an inertial frame called Inertial Fixed References System (IFRS). As mentioned before, attitude is a set of coordinates which defines the orientation. It could be a 3D vector which is represented by a 3D rotation matrix. The basic rotation matrix (also called elemental rotation) is a 3x3 matrix which is used to rotate the coordinate system by an angle $\theta$ about $x$, $y$, or $z$ axis and defined by the following equation:&lt;/p&gt;
&lt;div&gt;
$$ R_x = \begin{bmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; \cos(\theta) &amp; -\sin(\theta) \\ 0 &amp; \sin(\theta) &amp; \cos(\theta)  \end{bmatrix} $$
&lt;/div&gt;
&lt;div&gt;
$$ R_y = \begin{bmatrix} \cos(\theta) &amp; 0 &amp; \sin(\theta)  \\  0 &amp; 1 &amp; 0 \\ -\sin(\theta) &amp; 0 &amp; \cos(\theta) \end{bmatrix} $$
&lt;/div&gt;
&lt;div&gt;
$$ R_z = \begin{bmatrix} \cos(\theta) &amp; -\sin(\theta) &amp; 0 \\ \sin(\theta) &amp; \cos(\theta) &amp; 0 \\ 0 &amp; 0 &amp; 1 \end{bmatrix} $$
&lt;/div&gt;
&lt;p&gt;where $\theta$ is the angle of rotation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://armanasq.github.io/attitude-representation/&#34;&gt;Attitude Representation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;p&gt;[&lt;a id=&#34;1&#34; href=&#34;#id1&#34; &gt; 1 &lt;/a&gt;] M. D. Shuster, &amp;ldquo;In my estimation,&amp;rdquo; The Journal of the Astronautical Sciences, 2006. &lt;br&gt;
[&lt;a id=&#34;2&#34; href=&#34;#id2&#34; &gt; 2 &lt;/a&gt;]	M. D. Shuster, &amp;ldquo;Beyond estimation,&amp;rdquo; Advances in the Astronautical Sciences, 2006. &lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
